server.port=8092
server.context-path=/adminportal
spring.thymeleaf.cache=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

#LOCAL
#spring.datasource.url=jdbc:mysql://localhost:3306/bookstoredatabasenew?autoReconnect=true&useSSL=false
#HEROKU CLEARDB
spring.datasource.url=jdbc:mysql://us-cdbr-iron-east-05.cleardb.net/heroku_6af4595c2ee8161?reconnect=true  
#HEROKU JAWSDB
spring.datasource.url=jdbc:mysql://fugfonv8odxxolj8.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/a145ye1lj0paly0o?reconnect=true 

# Username and secret
#LOCAL
#spring.datasource.username=root
#spring.datasource.password=root
#HEROKU CLEARDB
#spring.datasource.username=b6bd7ef8d7cdc2
#spring.datasource.password=66dd2a40 
#HEROKU JAWSDB
spring.datasource.username=ttdq8y08f44m0x1u
spring.datasource.password=khj6h6fx33rruzs9 

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect